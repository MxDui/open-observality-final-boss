apiVersion: 1

datasources:
  - name: Prometheus
    type: prometheus
    access: proxy
    url: http://prometheus:9090
    isDefault: true
    editable: true
    jsonData:
      timeInterval: 30s
      queryTimeout: 60s
      httpMethod: POST
      exemplarTraceIdDestinations:
        - name: trace_id
          datasource: Jaeger
    secureJsonData: {}

  - name: Loki
    type: loki
    access: proxy
    url: http://loki:3100
    editable: true
    jsonData:
      maxLines: 1000
      timeout: 60s
      derivedFields:
        - matcherRegex: "trace_id=(\\w+)"
          name: "TraceID"
          url: "$${__value.raw}"
          datasourceUid: jaeger
    secureJsonData: {}

  - name: Jaeger
    type: jaeger
    access: proxy
    url: http://jaeger:16686
    editable: true
    uid: jaeger
    jsonData:
      tracesToLogs:
        datasourceUid: loki
        tags: ['job', 'instance', 'pod', 'namespace']
        mappedTags: [
          {key: 'service.name', value: 'service'},
          {key: 'service.namespace', value: 'namespace'}
        ]
        mapTagNamesEnabled: true
        spanStartTimeShift: '1h'
        spanEndTimeShift: '1h'
        filterByTraceID: false
        filterBySpanID: false
      tracesToMetrics:
        datasourceUid: prometheus
        tags: [
          {key: 'service.name', value: 'service'},
          {key: 'job'}
        ]
        queries:
          - name: 'Sample query'
            query: 'sum(rate(traces_spanmetrics_latency_bucket{$$__tags}[5m]))'
      nodeGraph:
        enabled: true
      search:
        hide: false
    secureJsonData: {}

  - name: Alertmanager
    type: alertmanager
    access: proxy
    url: http://alertmanager:9093
    editable: true
    jsonData:
      implementation: prometheus
    secureJsonData: {}

deleteDatasources:
  - name: TestData DB
    orgId: 1